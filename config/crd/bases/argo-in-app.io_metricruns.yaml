---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: metricruns.argo-in-app.io
spec:
  group: argo-in-app.io
  names:
    kind: MetricRun
    listKind: MetricRunList
    plural: metricruns
    singular: metricrun
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: MetricRun is the Schema for the metricruns API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MetricRunSpec defines the desired state of MetricRun
            properties:
              metrics:
                items:
                  description: Metric defines a metric in which to perform analysis
                  properties:
                    consecutiveErrorLimit:
                      anyOf:
                      - type: integer
                      - type: string
                      description: 'ConsecutiveErrorLimit is the maximum number of
                        times the measurement is allowed to error in succession, before
                        the metric is considered error (default: 4)'
                      x-kubernetes-int-or-string: true
                    count:
                      anyOf:
                      - type: integer
                      - type: string
                      description: Count is the number of times to run the measurement.
                        If both interval and count are omitted, the effective count
                        is 1. If only interval is specified, metric runs indefinitely.
                        If count > 1, interval must be specified.
                      x-kubernetes-int-or-string: true
                    failureCondition:
                      description: FailureCondition is an expression which determines
                        if a measurement is considered failed If both success and
                        failure conditions are specified, and the measurement does
                        not fall into either condition, the measurement is considered
                        Inconclusive
                      type: string
                    failureLimit:
                      anyOf:
                      - type: integer
                      - type: string
                      description: 'FailureLimit is the maximum number of times the
                        measurement is allowed to fail, before the entire metric is
                        considered Failed (default: 0)'
                      x-kubernetes-int-or-string: true
                    inconclusiveLimit:
                      anyOf:
                      - type: integer
                      - type: string
                      description: 'InconclusiveLimit is the maximum number of times
                        the measurement is allowed to measure Inconclusive, before
                        the entire metric is considered Inconclusive (default: 0)'
                      x-kubernetes-int-or-string: true
                    initialDelay:
                      description: InitialDelay how long the AnalysisRun should wait
                        before starting this metric
                      type: string
                    interval:
                      description: Interval defines an interval string (e.g. 30s,
                        5m, 1h) between each measurement. If omitted, will perform
                        a single measurement
                      type: string
                    name:
                      description: Name is the name of the metric
                      type: string
                    provider:
                      description: Provider configuration to the external system to
                        use to verify the analysis
                      properties:
                        prometheus:
                          description: Prometheus specifies the prometheus metric
                            to query
                          properties:
                            address:
                              description: Address is the HTTP address and port of
                                the prometheus server
                              type: string
                            query:
                              description: Query is a raw prometheus query to perform
                              type: string
                          type: object
                      type: object
                    successCondition:
                      description: 'SuccessCondition is an expression which determines
                        if a measurement is considered successful Expression is a
                        goevaluate expression. The keyword `result` is a variable
                        reference to the value of measurement. Results can be both
                        structured data or primitive. Examples: result > 10 (result.requests_made
                        * result.requests_succeeded / 100) >= 90'
                      type: string
                  required:
                  - name
                  - provider
                  type: object
                type: array
            required:
            - metrics
            type: object
          status:
            description: MetricRunStatus defines the observed state of MetricRun
            properties:
              message:
                description: Message is a message explaining current status
                type: string
              metricResults:
                description: MetricResults contains the metrics collected during the
                  run
                items:
                  description: MetricResult contain a list of the most recent measurements
                    for a single metric along with counters on how often the measurement
                  properties:
                    consecutiveError:
                      description: ConsecutiveError is the number of times an error
                        was encountered during measurement in succession Resets to
                        zero when non-errors are encountered
                      format: int32
                      type: integer
                    count:
                      description: Count is the number of times the metric was measured
                        without Error This is equal to the sum of Successful, Failed,
                        Inconclusive
                      format: int32
                      type: integer
                    dryRun:
                      description: DryRun indicates whether this metric is running
                        in a dry-run mode or not
                      type: boolean
                    error:
                      description: Error is the number of times an error was encountered
                        during measurement
                      format: int32
                      type: integer
                    failed:
                      description: Failed is the number of times the metric was measured
                        Failed
                      format: int32
                      type: integer
                    inconclusive:
                      description: Inconclusive is the number of times the metric
                        was measured Inconclusive
                      format: int32
                      type: integer
                    measurements:
                      description: Measurements holds the most recent measurements
                        collected for the metric
                      items:
                        description: Measurement is a point in time result value of
                          a single metric, and the time it was measured
                        properties:
                          finishedAt:
                            description: FinishedAt is the timestamp in which this
                              measurement completed and value was collected
                            format: date-time
                            type: string
                          message:
                            description: Message contains a message describing current
                              condition (e.g. error messages)
                            type: string
                          metadata:
                            additionalProperties:
                              type: string
                            description: Metadata stores additional metadata about
                              this metric result, used by the different providers
                              (e.g. kayenta run ID, job name)
                            type: object
                          phase:
                            description: Phase is the status of this single measurement
                            type: string
                          resumeAt:
                            description: ResumeAt is the  timestamp when the analysisRun
                              should try to resume the measurement
                            format: date-time
                            type: string
                          startedAt:
                            description: StartedAt is the timestamp in which this
                              measurement started to be measured
                            format: date-time
                            type: string
                          value:
                            description: Value is the measured value of the metric
                            type: string
                        required:
                        - phase
                        type: object
                      type: array
                    message:
                      description: Message contains a message describing current condition
                        (e.g. error messages)
                      type: string
                    metadata:
                      additionalProperties:
                        type: string
                      description: Metadata stores additional metadata about this
                        metric. It is used by different providers to store the final
                        state which gets used while taking measurements. For example,
                        Prometheus uses this field to store the final resolved query
                        after substituting the template arguments.
                      type: object
                    name:
                      description: Name is the name of the metric
                      type: string
                    phase:
                      description: Phase is the overall aggregate status of the metric
                      type: string
                    successful:
                      description: Successful is the number of times the metric was
                        measured Successful
                      format: int32
                      type: integer
                  required:
                  - name
                  - phase
                  type: object
                type: array
              phase:
                description: Phase is the status of the analysis run
                type: string
              runSummary:
                description: RunSummary contains the final results from the metric
                  executions
                properties:
                  count:
                    description: This is equal to the sum of Successful, Failed, Inconclusive
                    format: int32
                    type: integer
                  error:
                    description: Error is the number of times an error was encountered
                      during measurement
                    format: int32
                    type: integer
                  failed:
                    description: Failed is the number of times the metric was measured
                      Failed
                    format: int32
                    type: integer
                  inconclusive:
                    description: Inconclusive is the number of times the metric was
                      measured Inconclusive
                    format: int32
                    type: integer
                  successful:
                    description: Successful is the number of times the metric was
                      measured Successful
                    format: int32
                    type: integer
                type: object
              startedAt:
                description: StartedAt indicates when the analysisRun first started
                format: date-time
                type: string
            required:
            - phase
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
