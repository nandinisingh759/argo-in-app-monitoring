---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: inappmetrics.argo-in-app.io
spec:
  group: argo-in-app.io
  names:
    kind: InAppMetric
    listKind: InAppMetricList
    plural: inappmetrics
    singular: inappmetric
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: InAppMetric is the Schema for the inappmetrics API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: InAppMetricSpec defines the desired state of InAppMetric
            properties:
              command:
                type: string
              concurrencyPolicy:
                type: string
              metrics:
                items:
                  description: Metric defines a metric in which to perform analysis
                  properties:
                    consecutiveErrorLimit:
                      anyOf:
                      - type: integer
                      - type: string
                      description: 'ConsecutiveErrorLimit is the maximum number of
                        times the measurement is allowed to error in succession, before
                        the metric is considered error (default: 4)'
                      x-kubernetes-int-or-string: true
                    count:
                      anyOf:
                      - type: integer
                      - type: string
                      description: Count is the number of times to run the measurement.
                        If both interval and count are omitted, the effective count
                        is 1. If only interval is specified, metric runs indefinitely.
                        If count > 1, interval must be specified.
                      x-kubernetes-int-or-string: true
                    failureCondition:
                      description: FailureCondition is an expression which determines
                        if a measurement is considered failed If both success and
                        failure conditions are specified, and the measurement does
                        not fall into either condition, the measurement is considered
                        Inconclusive
                      type: string
                    failureLimit:
                      anyOf:
                      - type: integer
                      - type: string
                      description: 'FailureLimit is the maximum number of times the
                        measurement is allowed to fail, before the entire metric is
                        considered Failed (default: 0)'
                      x-kubernetes-int-or-string: true
                    inconclusiveLimit:
                      anyOf:
                      - type: integer
                      - type: string
                      description: 'InconclusiveLimit is the maximum number of times
                        the measurement is allowed to measure Inconclusive, before
                        the entire metric is considered Inconclusive (default: 0)'
                      x-kubernetes-int-or-string: true
                    initialDelay:
                      description: InitialDelay how long the AnalysisRun should wait
                        before starting this metric
                      type: string
                    interval:
                      description: Interval defines an interval string (e.g. 30s,
                        5m, 1h) between each measurement. If omitted, will perform
                        a single measurement
                      type: string
                    name:
                      description: Name is the name of the metric
                      type: string
                    provider:
                      description: Provider configuration to the external system to
                        use to verify the analysis
                      properties:
                        prometheus:
                          description: Prometheus specifies the prometheus metric
                            to query
                          properties:
                            address:
                              description: Address is the HTTP address and port of
                                the prometheus server
                              type: string
                            query:
                              description: Query is a raw prometheus query to perform
                              type: string
                          type: object
                      type: object
                    successCondition:
                      description: 'SuccessCondition is an expression which determines
                        if a measurement is considered successful Expression is a
                        goevaluate expression. The keyword `result` is a variable
                        reference to the value of measurement. Results can be both
                        structured data or primitive. Examples: result > 10 (result.requests_made
                        * result.requests_succeeded / 100) >= 90'
                      type: string
                  required:
                  - name
                  - provider
                  type: object
                type: array
              schedule:
                type: string
              startingDeadlineSeconds:
                description: Suspend                 *bool             `json:"suspend,omitempty"`
                format: int64
                type: integer
            required:
            - metrics
            type: object
          status:
            description: InAppMetricStatus defines the observed state of InAppMetric
            properties:
              active:
                items:
                  description: 'ObjectReference contains enough information to let
                    you inspect or modify the referred object. --- New uses of this
                    type are discouraged because of difficulty describing its usage
                    when embedded in APIs. 1. Ignored fields.  It includes many fields
                    which are not generally honored.  For instance, ResourceVersion
                    and FieldPath are both very rarely valid in actual usage. 2. Invalid
                    usage help.  It is impossible to add specific help for individual
                    usage.  In most embedded usages, there are particular restrictions
                    like, "must refer only to types A and B" or "UID not honored"
                    or "name must be restricted". Those cannot be well described when
                    embedded. 3. Inconsistent validation.  Because the usages are
                    different, the validation rules are different by usage, which
                    makes it hard for users to predict what will happen. 4. The fields
                    are both imprecise and overly precise.  Kind is not a precise
                    mapping to a URL. This can produce ambiguity during interpretation
                    and require a REST mapping.  In most cases, the dependency is
                    on the group,resource tuple and the version of the actual struct
                    is irrelevant. 5. We cannot easily change it.  Because this type
                    is embedded in many locations, updates to this type will affect
                    numerous schemas.  Don''t make new APIs embed an underspecified
                    API type they do not control. Instead of using this type, create
                    a locally provided and used type that is well-focused on your
                    reference. For example, ServiceReferences for admission registration:
                    https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                    .'
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                type: array
              lastScheduleTime:
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
